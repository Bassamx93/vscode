/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/

.quick-input-widget {
	position: absolute;
	width: 600px;
	z-index: 2550;
	left: 50%;
	-webkit-app-region: no-drag;
	border-radius: 6px;
}

.quick-input-titlebar {
	cursor: grab;
	display: flex;
	align-items: center;
	border-top-right-radius: 5px;
	border-top-left-radius: 5px;
}

.quick-input-left-action-bar {
	display: flex;
	margin-left: 4px;
	flex: 1;
}

/* give some space between input and action bar */
.quick-input-inline-action-bar > .actions-container > .action-item:first-child {
	margin-left: 5px;
}

/* center horizontally */
.quick-input-inline-action-bar > .actions-container > .action-item {
	margin-top: 2px;
}

.quick-input-title {
	cursor: grab;
	padding: 3px 0px;
	text-align: center;
	text-overflow: ellipsis;
	overflow: hidden;
}

.quick-input-right-action-bar {
	display: flex;
	margin-right: 4px;
	flex: 1;
}

.quick-input-right-action-bar > .actions-container {
	justify-content: flex-end;
}

.quick-input-titlebar .monaco-action-bar .action-label.codicon {
	background-position: center;
	background-repeat: no-repeat;
	padding: 2px;
}

.quick-input-description {
	margin: 6px 6px 6px 11px;
}

.quick-input-header .quick-input-description {
	margin: 4px 2px;
	flex: 1;
}

.quick-input-header {
	cursor: grab;
	display: flex;
	padding: 6px 6px 2px 6px;
}

.quick-input-widget.hidden-input .quick-input-header {
	/* reduce margins and paddings when input box hidden */
	padding: 0;
	margin-bottom: 0;
}

.quick-input-and-message {
	display: flex;
	flex-direction: column;
	flex-grow: 1;
	min-width: 0;
	position: relative;
}

.quick-input-check-all {
	align-self: center;
	margin: 0 12px 0 0; /* Increase right margin for better spacing from input */
	width: 16px;
	height: 16px;
	padding: 0px;
	border: 1px solid var(--vscode-checkbox-border);
	background-color: var(--vscode-checkbox-background);
	position: relative; /* For partial state positioning */
	opacity: 1;
}

/* Checked state styling to match tree checkboxes */
.quick-input-check-all.checked {
	background-color: var(--vscode-checkbox-background);
	border: 1px solid var(--vscode-checkbox-border);
}

/* Icon styling for checkAll to match tree checkboxes */
.quick-input-check-all.codicon {
	font-size: 13px;
	line-height: 15px;
}

/* Partial state for checkAll checkbox - only show dash when NOT checked */
.quick-input-check-all.partial:not(.checked) .codicon {
	display: none !important;
}

.quick-input-check-all.partial:not(.checked)::after {
	content: '';
	position: absolute;
	top: 50%;
	left: 50%;
	transform: translate(-50%, -50%);
	width: 8px;
	height: 2px;
	background-color: var(--vscode-checkbox-foreground);
	border-radius: 1px;
}

.quick-input-filter {
	flex-grow: 1;
	display: flex;
	position: relative;
}

.quick-input-box {
	flex-grow: 1;
}

.quick-input-widget.show-checkboxes .quick-input-box,
.quick-input-widget.show-checkboxes .quick-input-message {
	margin-left: 12px;
}

.quick-input-visible-count {
	position: absolute;
	left: -10000px;
}

.quick-input-count {
	align-self: center;
	position: absolute;
	right: 4px;
	display: flex;
	align-items: center;
}

.quick-input-count .monaco-count-badge {
	vertical-align: middle;
	padding: 2px 4px;
	border-radius: 2px;
	min-height: auto;
	line-height: normal;
}

.quick-input-action {
	margin-left: 6px;
}

.quick-input-action .monaco-text-button {
	font-size: 11px;
	padding: 0 6px;
	display: flex;
	height: 25px;
	align-items: center;
}

.quick-input-message {
	margin-top: -1px;
	padding: 5px;
	overflow-wrap: break-word;
}

.quick-input-message > .codicon {
	margin: 0 0.2em;
	vertical-align: text-bottom;
}

/* Links in descriptions & validations */
.quick-input-message a {
	color: inherit;
}

.quick-input-progress.monaco-progress-container {
	position: relative;
}

.quick-input-list {
	line-height: 22px;
}

.quick-tree-container {
	line-height: 22px;
	position: relative;
	overflow: hidden;
}

.quick-input-widget.hidden-input .quick-input-list {
	margin-top: 4px;
	/* reduce margins when input box hidden */
	padding-bottom: 4px;
}

.quick-input-list .monaco-list {
	overflow: hidden;
	max-height: calc(20 * 22px);
	padding-bottom: 5px;
}

.quick-input-list .monaco-scrollable-element {
	padding: 0px 6px;
}

.quick-input-list .quick-input-list-entry {
	box-sizing: border-box;
	overflow: hidden;
	display: flex;
	padding: 0 6px;
}

.quick-input-list .quick-input-list-entry.indented {
	padding-left: 1.3em;
}

.quick-input-list .quick-input-list-entry.quick-input-list-separator-border {
	border-top-width: 1px;
	border-top-style: solid;
}

.quick-input-list .monaco-list-row {
	border-radius: 3px;
}

.quick-input-list .monaco-list-row[data-index="0"] .quick-input-list-entry.quick-input-list-separator-border {
	border-top-style: none;
}

.quick-input-list .quick-input-list-label {
	overflow: hidden;
	display: flex;
	height: 100%;
	flex: 1;
}

.quick-input-widget .monaco-checkbox {
	margin-right: 0;
	align-self: center;
}

.quick-input-list .quick-input-list-icon {
	background-size: 16px;
	background-position: left center;
	background-repeat: no-repeat;
	padding-right: 6px;
	width: 16px;
	height: 22px;
	display: flex;
	align-items: center;
	justify-content: center;
}

.quick-input-list .quick-input-list-rows {
	overflow: hidden;
	text-overflow: ellipsis;
	display: flex;
	flex-direction: column;
	height: 100%;
	flex: 1;
	margin-left: 5px;
}

.quick-input-list .quick-input-list-rows > .quick-input-list-row {
	display: flex;
	align-items: center;
}

.quick-input-list .quick-input-list-rows > .quick-input-list-row .monaco-icon-label,
.quick-input-list .quick-input-list-rows > .quick-input-list-row .monaco-icon-label .monaco-icon-label-container > .monaco-icon-name-container {
	flex: 1;
	/* make sure the icon label grows within the row */
}

.quick-input-list .quick-input-list-rows > .quick-input-list-row .codicon[class*='codicon-'] {
	vertical-align: text-bottom;
}

.quick-input-list .quick-input-list-rows .monaco-highlighted-label > span {
	opacity: 1;
}

.quick-input-list .quick-input-list-entry .quick-input-list-entry-keybinding {
	margin-right: 8px;
	/* separate from the separator label or scrollbar if any */
}

.quick-input-list .quick-input-list-label-meta {
	opacity: 0.7;
	line-height: normal;
	text-overflow: ellipsis;
	overflow: hidden;
}

/* preserve list-like styling instead of tree-like styling */
.quick-input-list .monaco-list .monaco-list-row .monaco-highlighted-label .highlight {
	font-weight: bold;
	background-color: unset;
	color: var(--vscode-list-highlightForeground) !important;
}

/* preserve list-like styling instead of tree-like styling */
.quick-input-list .monaco-list .monaco-list-row.focused .monaco-highlighted-label .highlight {
	color: var(--vscode-list-focusHighlightForeground) !important;
}

.quick-input-list .quick-input-list-entry .quick-input-list-separator {
	margin-right: 4px;
	/* separate from keybindings or actions */
}

.quick-input-list .quick-input-list-entry-action-bar {
	display: flex;
	flex: 0;
	overflow: visible;
}

.quick-input-list .quick-input-list-entry-action-bar .action-label {
	/*
	 * By default, actions in the quick input action bar are hidden
	 * until hovered over them or selected.
	 */
	display: none;
}

.quick-input-list .quick-input-list-entry-action-bar .action-label.codicon {
	margin-right: 4px;
	padding: 2px;
}

.quick-input-list .quick-input-list-entry-action-bar {
	margin-top: 1px;
}

.quick-input-list .quick-input-list-entry-action-bar {
	margin-right: 4px;
	/* separate from scrollbar */
}

.quick-input-list .quick-input-list-entry .quick-input-list-entry-action-bar .action-label.always-visible,
.quick-input-list .quick-input-list-entry:hover .quick-input-list-entry-action-bar .action-label,
.quick-input-list .quick-input-list-entry.focus-inside .quick-input-list-entry-action-bar .action-label,
.quick-input-list .monaco-list-row.focused .quick-input-list-entry-action-bar .action-label,
.quick-input-list .monaco-list-row.passive-focused .quick-input-list-entry-action-bar .action-label {
	display: flex;
}

.quick-input-list > .monaco-list:focus .monaco-list-row.focused {
	outline: 1px solid var(--vscode-list-focusOutline) !important;
	outline-offset: -1px;
}

.quick-input-list > .monaco-list:focus .monaco-list-row.focused .quick-input-list-entry.quick-input-list-separator-border {
	border-color: transparent;
}

/* focused items in quick pick */
.quick-input-list .monaco-list-row.focused .monaco-keybinding-key,
.quick-input-list .monaco-list-row.focused .quick-input-list-entry .quick-input-list-separator {
	color: inherit
}

.quick-input-list .monaco-list-row.focused .monaco-keybinding-key {
	background: none;
}

.quick-input-list .quick-input-list-separator-as-item {
	padding: 4px 6px;
	font-size: 12px;
}

/* Quick input separators as full-row item */
.quick-input-list .quick-input-list-separator-as-item .label-name {
	font-weight: 600;
}

.quick-input-list .quick-input-list-separator-as-item .label-description {
	/* Override default description opacity so we don't have a contrast ratio issue. */
	opacity: 1 !important;
}

/* Hide border when the item becomes the sticky one */
.quick-input-list .monaco-tree-sticky-row .quick-input-list-entry.quick-input-list-separator-as-item.quick-input-list-separator-border {
	border-top-style: none;
}

/* Give sticky row the same padding as the scrollable list */
.quick-input-list .monaco-tree-sticky-row {
	padding: 0 5px;
}

/* Hide the twistie containers so that there isn't blank indent (only for old quickInputTree, not new QuickTree) */
.quick-input-list:not(.quick-tree-container):not(.monaco-tree-wrapper) .monaco-tl-twistie {
	display: none !important;
}

/* Quick input snap lines visible while DnD */
.quick-input-widget-snapline {
	position: absolute;
	z-index: 2549;
}

.quick-input-widget-snapline.hidden {
	display: none;
}

.quick-input-widget-snapline.horizontal {
	border-top: 1px dashed var(--vscode-editorRuler-foreground);
	height: 0;
	width: 100%;
	left: 0;
}

.quick-input-widget-snapline.vertical {
	border-left: 1px dashed var(--vscode-editorRuler-foreground);
	height: 100%;
	width: 0;
	top: 0;
}

/* QuickTree styles */
.quick-tree-entry {
	display: flex;
	align-items: center;
	cursor: pointer;
	padding: 0 2px;
	min-height: 22px;
	box-sizing: border-box;
	width: 100%;
	overflow: hidden;
}

/* Tighter spacing for checkbox entries */
.quick-tree-entry.has-checkbox {
	gap: 1px; /* Very tight spacing between twisty and checkbox */
}

.quick-tree-rows {
	display: flex;
	flex-direction: column;
	flex: 1;
	min-width: 0;
	overflow: hidden;
}

.quick-tree-row {
	display: flex;
	align-items: center;
	min-width: 0;
	overflow: hidden;
}

/* QuickTree Checkbox styles */
.quick-tree-checkbox-container {
	display: flex;
	align-items: center;
	margin-right: 3px;
	margin-left: -4px; /* Aggressively pull closer to twisty */
	min-width: 16px;
	flex-shrink: 0;
	position: relative;
	z-index: 1; /* Ensure checkbox is above any overlapping elements */
}

.quick-tree-checkbox {
	margin: 0;
}

/* Mirror the treeView checkbox styling pattern for Quick Tree */
.quick-tree-container .monaco-list .monaco-list-row.selected .quick-tree-checkbox {
	/* background-color: var(--vscode-checkbox-selectBackground);
	border: 1px solid var(--vscode-checkbox-selectBorder); */
}

.quick-tree-container .monaco-list .monaco-list-row .quick-tree-checkbox {
	width: 16px;
	height: 16px;
	margin: 3px 6px 3px 0px;
	padding: 0px;
	border: 1px solid var(--vscode-checkbox-border);
	opacity: 1;
	background-color: var(--vscode-checkbox-background);
}

.quick-tree-container .monaco-list .monaco-list-row .quick-tree-checkbox.codicon {
	font-size: 13px;
	line-height: 15px;
}

.quick-tree-checkbox.partial {
	position: relative;
}

.quick-tree-checkbox.partial::after {
	content: '';
	position: absolute;
	top: 50%;
	left: 50%;
	transform: translate(-50%, -50%);
	width: 8px;
	height: 2px;
	background-color: var(--vscode-checkbox-foreground);
	border-radius: 1px;
}

.quick-tree-checkbox.disabled {
	opacity: 0.4;
	cursor: not-allowed;
}

/* Fix label overflow issues and reduce spacing */
.quick-tree-entry.has-checkbox .quick-tree-label {
	margin-left: -2px; /* Pull label closer to checkbox */
	flex: 1;
	min-width: 0; /* Important for flex text overflow */
}

.quick-tree-label .label-name {
	overflow: hidden;
	text-overflow: ellipsis;
	white-space: nowrap;
	max-width: 100%;
}

.quick-tree-label .label-description {
	overflow: hidden;
	text-overflow: ellipsis;
	white-space: nowrap;
	max-width: 100%;
}

.quick-tree-label {
	display: flex;
	flex: 1;
	min-width: 0;
	overflow: hidden;
	margin-left: 2px; /* Small gap from previous elements */
	align-items: center;
	cursor: pointer;
	user-select: none;
}

.quick-tree-label .checkbox {
	margin-right: 6px;
}

.quick-tree-label .checkbox.partial::before {
	content: "";
	position: absolute;
	top: 50%;
	left: 50%;
	transform: translate(-50%, -50%);
	width: 6px;
	height: 2px;
	background-color: var(--vscode-checkbox-foreground);
}

.quick-tree-icon {
	width: 16px;
	height: 16px;
	margin-right: 6px;
	background-size: 16px;
	background-position: center center;
	background-repeat: no-repeat;
}

.quick-tree-rows {
	display: flex;
	flex-direction: column;
	flex: 1;
	min-width: 0;
}

.quick-tree-row {
	display: flex;
	align-items: center;
	min-height: 22px;
}

.quick-tree-row:last-child {
	min-height: 0;
}

.quick-tree-keybinding {
	margin-left: auto;
	padding-left: 10px;
}

.quick-tree-detail {
	opacity: 0.7;
	font-size: 0.9em;
}

.quick-tree-action-bar {
	margin-left: 8px;
}

.quick-tree-entry.has-actions .quick-tree-action-bar {
	display: flex;
}

.quick-tree-entry:not(.has-actions) .quick-tree-action-bar {
	display: none;
}

/* QuickTree accessibility improvements */
/* .quick-tree-entry[aria-expanded="true"] > .quick-tree-twistie {
	transform: rotate(0deg);
}

.quick-tree-entry[aria-expanded="false"] > .quick-tree-twistie {
	transform: rotate(-90deg);
} */

.quick-tree-entry[role="checkbox"][aria-checked="mixed"] .checkbox {
	background-color: var(--vscode-checkbox-background);
	border-color: var(--vscode-checkbox-border);
}

.quick-tree-entry[role="checkbox"][aria-checked="mixed"] .checkbox::before {
	content: "";
	position: absolute;
	top: 50%;
	left: 50%;
	transform: translate(-50%, -50%);
	width: 8px;
	height: 2px;
	background-color: var(--vscode-checkbox-foreground);
}

/* QuickTree container layout integration */
.quick-tree-container {
	height: 100%;
	width: 100%;
	overflow: hidden;
	flex-shrink: 1;
}

.quick-tree-container .monaco-tree {
	height: 100%;
	width: 100%;
}

/* Reduce excessive padding for QuickTree */
.quick-tree-container .monaco-scrollable-element {
	padding: 0px 2px;
}
